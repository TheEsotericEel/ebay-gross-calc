{
  "version": 3,
  "sources": ["../../src/calc/math.ts", "../../src/popup/popup.ts"],
  "sourcesContent": ["// src/calc/math.ts  (new)\r\nexport type Order = {\r\n  gross: number;      // buyer paid item price + tax + shipping collected (optional)\r\n  itemPrice?: number; // if you want fees based on item price only\r\n  shippingCost: number; // your label cost\r\n  cogs: number;\r\n  fees?: number;      // platform + processing; if omitted we compute approx\r\n  ads?: number;       // promoted listings spend\r\n  refunds?: number;   // refunds given\r\n};\r\n\r\nexport type Goals = {\r\n  weeklySalesGoal: number;     // $ target for week\r\n  listingGoalDaily?: number;   // $ listed per day target\r\n};\r\n\r\nexport type KPIs = {\r\n  units: number;\r\n  gross: number;\r\n  net: number;\r\n  asp: number;\r\n  marginPct: number;\r\n  fees: number;\r\n  ads: number;\r\n  shippingCost: number;\r\n  cogs: number;\r\n  refunds: number;\r\n  progressWeekly: number;      // 0..1 of gross vs weekly goal\r\n  pipelineListedToday: number; // current listedToday dollars\r\n  pipelineProgress: number;    // 0..1 listedToday vs listingGoalDaily\r\n};\r\n\r\n// crude fee model fallback if per\u2011order fees not supplied\r\nexport function estimateFees(order: Order, opts = { feeRate: 0.13, procRate: 0.029, procFixed: 0.30 }) {\r\n  const base = order.itemPrice ?? order.gross;\r\n  const marketplaceFee = base * opts.feeRate;\r\n  const processingFee = base * opts.procRate + opts.procFixed;\r\n  return marketplaceFee + processingFee;\r\n}\r\n\r\nexport function computeKPIs(orders: Order[], goals: Goals, listedToday = 0): KPIs {\r\n  let units = orders.length;\r\n  let gross = 0, fees = 0, ads = 0, shippingCost = 0, cogs = 0, refunds = 0;\r\n\r\n  for (const o of orders) {\r\n    gross += o.gross;\r\n    fees  += o.fees ?? estimateFees(o);\r\n    ads   += o.ads ?? 0;\r\n    shippingCost += o.shippingCost;\r\n    cogs  += o.cogs;\r\n    refunds += o.refunds ?? 0;\r\n  }\r\n  const net = gross - fees - ads - shippingCost - cogs - refunds;\r\n  const asp = units ? gross / units : 0;\r\n  const marginPct = gross ? net / gross : 0;\r\n\r\n  const progressWeekly = goals.weeklySalesGoal > 0 ? Math.min(1, gross / goals.weeklySalesGoal) : 0;\r\n  const pipelineProgress = goals.listingGoalDaily && goals.listingGoalDaily > 0\r\n    ? Math.min(1, listedToday / goals.listingGoalDaily)\r\n    : 0;\r\n\r\n  return {\r\n    units, gross, net, asp, marginPct,\r\n    fees, ads, shippingCost, cogs, refunds,\r\n    progressWeekly, pipelineListedToday: listedToday, pipelineProgress\r\n  };\r\n}\r\n", "// src/popup/popup.ts (replace whole file)\r\nimport { computeKPIs, type Order } from \"../calc/math.js\";\r\n\r\nconst stats = document.getElementById(\"stats\")!;\r\nconst input = document.getElementById(\"listedToday\") as HTMLInputElement | null;\r\nconst saveBtn = document.getElementById(\"saveListed\") as HTMLButtonElement | null;\r\nconst openBtn = document.getElementById(\"openOptions\") as HTMLButtonElement | null;\r\n\r\nasync function render() {\r\n  const { weeklyGoal = 0, listingGoalDaily = 0, listedToday = 0, orders = [] } =\r\n    await chrome.storage.local.get([\"weeklyGoal\", \"listingGoalDaily\", \"listedToday\", \"orders\"]);\r\n  const k = computeKPIs((orders as Order[]), { weeklySalesGoal: weeklyGoal, listingGoalDaily }, listedToday);\r\n\r\n  const pct = (n: number) => (n * 100).toFixed(0) + \"%\";\r\n  stats.innerHTML = `\r\n    <div>Units: ${k.units}</div>\r\n    <div>Gross: $${k.gross.toFixed(2)} | Net: $${k.net.toFixed(2)} | Margin: ${pct(k.marginPct)}</div>\r\n    <div>ASP: $${k.asp.toFixed(2)}</div>\r\n    <div>Fees: $${k.fees.toFixed(2)} | Ads: $${k.ads.toFixed(2)} | Ship: $${k.shippingCost.toFixed(2)} | COGS: $${k.cogs.toFixed(2)}</div>\r\n    <div>Weekly progress: ${pct(k.progressWeekly)}</div>\r\n    <div>Pipeline today: $${k.pipelineListedToday.toFixed(0)} ${listingGoalDaily ? `of $${listingGoalDaily} (${pct(k.pipelineProgress)})` : \"\"}</div>\r\n  `;\r\n\r\n  if (input) input.value = String(k.pipelineListedToday);\r\n}\r\n\r\nsaveBtn?.addEventListener(\"click\", async () => {\r\n  const v = Number((input as HTMLInputElement).value) || 0;\r\n  await chrome.storage.local.set({ listedToday: v });\r\n  render();\r\n});\r\n\r\nopenBtn?.addEventListener(\"click\", () => chrome.runtime.openOptionsPage());\r\nrender();\r\n"],
  "mappings": ";AAiCO,SAAS,aAAa,OAAc,OAAO,EAAE,SAAS,MAAM,UAAU,OAAO,WAAW,IAAK,GAAG;AACrG,QAAM,OAAO,MAAM,aAAa,MAAM;AACtC,QAAM,iBAAiB,OAAO,KAAK;AACnC,QAAM,gBAAgB,OAAO,KAAK,WAAW,KAAK;AAClD,SAAO,iBAAiB;AAC1B;AAEO,SAAS,YAAY,QAAiB,OAAc,cAAc,GAAS;AAChF,MAAI,QAAQ,OAAO;AACnB,MAAI,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,eAAe,GAAG,OAAO,GAAG,UAAU;AAExE,aAAW,KAAK,QAAQ;AACtB,aAAS,EAAE;AACX,YAAS,EAAE,QAAQ,aAAa,CAAC;AACjC,WAAS,EAAE,OAAO;AAClB,oBAAgB,EAAE;AAClB,YAAS,EAAE;AACX,eAAW,EAAE,WAAW;AAAA,EAC1B;AACA,QAAM,MAAM,QAAQ,OAAO,MAAM,eAAe,OAAO;AACvD,QAAM,MAAM,QAAQ,QAAQ,QAAQ;AACpC,QAAM,YAAY,QAAQ,MAAM,QAAQ;AAExC,QAAM,iBAAiB,MAAM,kBAAkB,IAAI,KAAK,IAAI,GAAG,QAAQ,MAAM,eAAe,IAAI;AAChG,QAAM,mBAAmB,MAAM,oBAAoB,MAAM,mBAAmB,IACxE,KAAK,IAAI,GAAG,cAAc,MAAM,gBAAgB,IAChD;AAEJ,SAAO;AAAA,IACL;AAAA,IAAO;AAAA,IAAO;AAAA,IAAK;AAAA,IAAK;AAAA,IACxB;AAAA,IAAM;AAAA,IAAK;AAAA,IAAc;AAAA,IAAM;AAAA,IAC/B;AAAA,IAAgB,qBAAqB;AAAA,IAAa;AAAA,EACpD;AACF;;;AC/DA,IAAM,QAAQ,SAAS,eAAe,OAAO;AAC7C,IAAM,QAAQ,SAAS,eAAe,aAAa;AACnD,IAAM,UAAU,SAAS,eAAe,YAAY;AACpD,IAAM,UAAU,SAAS,eAAe,aAAa;AAErD,eAAe,SAAS;AACtB,QAAM,EAAE,aAAa,GAAG,mBAAmB,GAAG,cAAc,GAAG,SAAS,CAAC,EAAE,IACzE,MAAM,OAAO,QAAQ,MAAM,IAAI,CAAC,cAAc,oBAAoB,eAAe,QAAQ,CAAC;AAC5F,QAAM,IAAI,YAAa,QAAoB,EAAE,iBAAiB,YAAY,iBAAiB,GAAG,WAAW;AAEzG,QAAM,MAAM,CAAC,OAAe,IAAI,KAAK,QAAQ,CAAC,IAAI;AAClD,QAAM,YAAY;AAAA,kBACF,EAAE,KAAK;AAAA,mBACN,EAAE,MAAM,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,QAAQ,CAAC,CAAC,cAAc,IAAI,EAAE,SAAS,CAAC;AAAA,iBAC9E,EAAE,IAAI,QAAQ,CAAC,CAAC;AAAA,kBACf,EAAE,KAAK,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,QAAQ,CAAC,CAAC,aAAa,EAAE,aAAa,QAAQ,CAAC,CAAC,aAAa,EAAE,KAAK,QAAQ,CAAC,CAAC;AAAA,4BACvG,IAAI,EAAE,cAAc,CAAC;AAAA,4BACrB,EAAE,oBAAoB,QAAQ,CAAC,CAAC,IAAI,mBAAmB,OAAO,gBAAgB,KAAK,IAAI,EAAE,gBAAgB,CAAC,MAAM,EAAE;AAAA;AAG5I,MAAI,MAAO,OAAM,QAAQ,OAAO,EAAE,mBAAmB;AACvD;AAEA,SAAS,iBAAiB,SAAS,YAAY;AAC7C,QAAM,IAAI,OAAQ,MAA2B,KAAK,KAAK;AACvD,QAAM,OAAO,QAAQ,MAAM,IAAI,EAAE,aAAa,EAAE,CAAC;AACjD,SAAO;AACT,CAAC;AAED,SAAS,iBAAiB,SAAS,MAAM,OAAO,QAAQ,gBAAgB,CAAC;AACzE,OAAO;",
  "names": []
}
